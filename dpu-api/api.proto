syntax = "proto3";

option go_package = "github.com/openshift/dpu-operator/api/dpu-api";

package Vendor;

service LifeCycleService {
  rpc Init(InitRequest) returns (IpPort);
}

service NetworkFunctionService {
  rpc CreateNetworkFunction(NFRequest) returns (Empty);
  rpc DeleteNetworkFunction(NFRequest) returns (Empty);
}

service ManualOperationService {
  rpc ManualRebootDpuFunction(ManualOperationRequest)  returns (ManualOperationResponse);
  rpc ManualUpgradeSdkFunction(ManualOperationRequest) returns (ManualOperationResponse);
}

message InitRequest {
  bool dpu_mode = 1;
  string dpu_identifier = 2;
}

message IpPort {
  string ip = 1;
  int32 port = 2;
}

message NFRequest {
  string input = 1;
  string output = 2;
}

message Empty {}

service DeviceService {
  rpc GetDevices(Empty) returns (DeviceListResponse);
  rpc SetNumVfs(VfCount) returns (VfCount);
}

message VfCount {
  int32 vf_cnt = 1;
}

message TopologyInfo {
  string node = 1;
}

message Device {
  string ID = 1;
  string health = 2;
  TopologyInfo topology = 3;
}

message DeviceListResponse {
  map<string, Device> devices = 1;
}

message ManualOperationRequest{
  string nodeName = 1;
  string pciAddress = 2;
  string sdkImagePath = 3;

}

message ManualOperationResponse{
  string status = 1;
  string message = 2;
}